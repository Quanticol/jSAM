	/*
 * generated by Xtext
 */
package org.cmg.ml.sam.xtext.prism.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import org.cmg.ml.sam.xtext.prism.prism.Model
import org.cmg.ml.sam.xtext.prism.util.SymbolTableCollector
import org.cmg.ml.sam.xtext.prism.prism.Module
import org.cmg.ml.sam.xtext.prism.prism.Constant
import org.cmg.ml.sam.xtext.prism.prism.Formula
import org.cmg.ml.sam.xtext.prism.prism.Variable
import org.cmg.ml.sam.xtext.prism.prism.PathFormulaDeclaration
import org.cmg.ml.sam.xtext.prism.prism.StateFormulaDeclaration
import org.cmg.ml.sam.prism.PrismSystem
import org.cmg.ml.sam.SamProjectHelper

class PrismGenerator implements IGenerator {
	
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		for( m: resource.allContents.toIterable.filter(typeof(Model))) {
			fsa.generateFile(
				SamProjectHelper.getPackageFolder(resource)+"/"+SamProjectHelper.getClassName(resource)+".java",
				m.compile(
					SamProjectHelper.getPackageFolder(resource).replace('/','.'),
					SamProjectHelper.getClassName(resource)
				)
			);
		}
	}
	
	def compile( Model m , String packageName , String className ) {
		var stc = new SymbolTableCollector();
		val generator = new ModuleStructureGenerator();
		
		var st = stc.collecSymbols(m)
//		var structure = generator.generateStructure(m)
		var structures = m.elements.map[ e |
			switch e {
				Module: generator.generateStructure(e)
				default: null
			}
		].filterNull
//		structure.generateIndexes
		var classGenerator = new ClassGenerator()
		classGenerator.setSymbolTable(st)
		var code = classGenerator.generateClass(packageName,className,
			m.elements.filter[ e | e instanceof Constant ] ,
			m.elements.filter[ e | e instanceof Formula ] ,
			m.elements.filter[ e | e instanceof Variable ] ,
			m.elements.filter[ e | e instanceof PathFormulaDeclaration] ,
			m.elements.filter[ e | e instanceof StateFormulaDeclaration] ,
			m.elements.findFirst[ e | e instanceof PrismSystem ] , 
			structures
		)
		println( code )
		code
	}
}
